name: work-time

on:
  pull_request:
    branches: master
    types: [synchronize]

jobs:
  work-time:
    if: startsWith(github.event.pull_request.title, '[WIP]') && contains(github.event.pull_request.head.ref, 'feature/q')
    runs-on: ubuntu-latest
    env:
      REPO: https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git
      HEAD_REF: ${{ github.event.pull_request.head.ref }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}

      - name: get-worknum
        id: get-worknum
        run: echo "::set-env name=WORK_NUM::${HEAD_REF#feature/}"

      - name: get-measurement
        id: get-measurement
        run: |
          set -o pipefail
          work_time=$(git log master..${HEAD_REF} \
            --oneline \
            --pretty=format:'%cd' \
            --date=format:'%s' \
            --date-order \
            | awk '
              NR == 1 { end = $0 }
              END {
                start = $0
                period = end - start
                if (period =< 0) {
                  exit(1)
                }
                printf "%02d時間%02d分%02d秒\n", period / 3600, (period % 3600) / 60, period % 60
              }
            ')

          echo "::set-env name=WORK_TIME::${work_time}"

      - name: update-file
        id: update-file
        if: success()
        run: |
          filename="src/main/java/${WORK_NUM,,}/${WORK_NUM^^}.java"
          if [ ! -f "${filename}" ]; then
            exit(1)
          fi

          sed -i -r "s/(\/\/ 完成までの時間:).*/\1 ${WORK_TIME}/g" ${filename}
          git config --global user.email "workflow@example.com"
          git config --global user.name "workflow user"
          git add ${filename}
          git commit -m '完成時間の記載' && git push ${REPO} HEAD:${{github.event.pull_request.head.ref}}

      - name: file-update-notification
        if: sucess()
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          work-time: ${WORK_TIME}
          script: |
            const work-time = core.getInput('work-time', {required: true})
            github.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: `現在の作業時間は${work-time} (休憩時間を含む)`,
              event: 'COMMENT'
            })